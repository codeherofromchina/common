<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.order.v2.dao.PurchContractSimpleMapper" >
  <resultMap id="BaseResultMap" type="com.erui.order.v2.model.PurchContractSimple" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="purch_contract_id" property="purchContractId" jdbcType="INTEGER" />
    <result column="product_requirement" property="productRequirement" jdbcType="VARCHAR" />
    <result column="warranty_period" property="warrantyPeriod" jdbcType="VARCHAR" />
    <result column="shipping_date" property="shippingDate" jdbcType="TIMESTAMP" />
    <result column="designated_location" property="designatedLocation" jdbcType="VARCHAR" />
    <result column="cost_burden" property="costBurden" jdbcType="VARCHAR" />
    <result column="inspection_at" property="inspectionAt" jdbcType="VARCHAR" />
    <result column="within_days" property="withinDays" jdbcType="VARCHAR" />
    <result column="method_and_time" property="methodAndTime" jdbcType="VARCHAR" />
    <result column="agreement_name" property="agreementName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="tenant" property="tenant" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, purch_contract_id, product_requirement, warranty_period, shipping_date, designated_location, 
    cost_burden, inspection_at, within_days, method_and_time, agreement_name, update_time, 
    create_time, tenant
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.order.v2.model.PurchContractSimpleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purch_contract_simple
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from purch_contract_simple
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from purch_contract_simple
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.order.v2.model.PurchContractSimpleExample" >
    delete from purch_contract_simple
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.order.v2.model.PurchContractSimple" >
    insert into purch_contract_simple (id, purch_contract_id, product_requirement, 
      warranty_period, shipping_date, designated_location, 
      cost_burden, inspection_at, within_days, 
      method_and_time, agreement_name, update_time, 
      create_time, tenant)
    values (#{id,jdbcType=INTEGER}, #{purchContractId,jdbcType=INTEGER}, #{productRequirement,jdbcType=VARCHAR}, 
      #{warrantyPeriod,jdbcType=VARCHAR}, #{shippingDate,jdbcType=TIMESTAMP}, #{designatedLocation,jdbcType=VARCHAR}, 
      #{costBurden,jdbcType=VARCHAR}, #{inspectionAt,jdbcType=VARCHAR}, #{withinDays,jdbcType=VARCHAR}, 
      #{methodAndTime,jdbcType=VARCHAR}, #{agreementName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{tenant,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.order.v2.model.PurchContractSimple" >
    insert into purch_contract_simple
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="purchContractId != null" >
        purch_contract_id,
      </if>
      <if test="productRequirement != null" >
        product_requirement,
      </if>
      <if test="warrantyPeriod != null" >
        warranty_period,
      </if>
      <if test="shippingDate != null" >
        shipping_date,
      </if>
      <if test="designatedLocation != null" >
        designated_location,
      </if>
      <if test="costBurden != null" >
        cost_burden,
      </if>
      <if test="inspectionAt != null" >
        inspection_at,
      </if>
      <if test="withinDays != null" >
        within_days,
      </if>
      <if test="methodAndTime != null" >
        method_and_time,
      </if>
      <if test="agreementName != null" >
        agreement_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="tenant != null" >
        tenant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="purchContractId != null" >
        #{purchContractId,jdbcType=INTEGER},
      </if>
      <if test="productRequirement != null" >
        #{productRequirement,jdbcType=VARCHAR},
      </if>
      <if test="warrantyPeriod != null" >
        #{warrantyPeriod,jdbcType=VARCHAR},
      </if>
      <if test="shippingDate != null" >
        #{shippingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="designatedLocation != null" >
        #{designatedLocation,jdbcType=VARCHAR},
      </if>
      <if test="costBurden != null" >
        #{costBurden,jdbcType=VARCHAR},
      </if>
      <if test="inspectionAt != null" >
        #{inspectionAt,jdbcType=VARCHAR},
      </if>
      <if test="withinDays != null" >
        #{withinDays,jdbcType=VARCHAR},
      </if>
      <if test="methodAndTime != null" >
        #{methodAndTime,jdbcType=VARCHAR},
      </if>
      <if test="agreementName != null" >
        #{agreementName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenant != null" >
        #{tenant,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.order.v2.model.PurchContractSimpleExample" resultType="java.lang.Integer" >
    select count(*) from purch_contract_simple
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update purch_contract_simple
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.purchContractId != null" >
        purch_contract_id = #{record.purchContractId,jdbcType=INTEGER},
      </if>
      <if test="record.productRequirement != null" >
        product_requirement = #{record.productRequirement,jdbcType=VARCHAR},
      </if>
      <if test="record.warrantyPeriod != null" >
        warranty_period = #{record.warrantyPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingDate != null" >
        shipping_date = #{record.shippingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.designatedLocation != null" >
        designated_location = #{record.designatedLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.costBurden != null" >
        cost_burden = #{record.costBurden,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectionAt != null" >
        inspection_at = #{record.inspectionAt,jdbcType=VARCHAR},
      </if>
      <if test="record.withinDays != null" >
        within_days = #{record.withinDays,jdbcType=VARCHAR},
      </if>
      <if test="record.methodAndTime != null" >
        method_and_time = #{record.methodAndTime,jdbcType=VARCHAR},
      </if>
      <if test="record.agreementName != null" >
        agreement_name = #{record.agreementName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenant != null" >
        tenant = #{record.tenant,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update purch_contract_simple
    set id = #{record.id,jdbcType=INTEGER},
      purch_contract_id = #{record.purchContractId,jdbcType=INTEGER},
      product_requirement = #{record.productRequirement,jdbcType=VARCHAR},
      warranty_period = #{record.warrantyPeriod,jdbcType=VARCHAR},
      shipping_date = #{record.shippingDate,jdbcType=TIMESTAMP},
      designated_location = #{record.designatedLocation,jdbcType=VARCHAR},
      cost_burden = #{record.costBurden,jdbcType=VARCHAR},
      inspection_at = #{record.inspectionAt,jdbcType=VARCHAR},
      within_days = #{record.withinDays,jdbcType=VARCHAR},
      method_and_time = #{record.methodAndTime,jdbcType=VARCHAR},
      agreement_name = #{record.agreementName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      tenant = #{record.tenant,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.order.v2.model.PurchContractSimple" >
    update purch_contract_simple
    <set >
      <if test="purchContractId != null" >
        purch_contract_id = #{purchContractId,jdbcType=INTEGER},
      </if>
      <if test="productRequirement != null" >
        product_requirement = #{productRequirement,jdbcType=VARCHAR},
      </if>
      <if test="warrantyPeriod != null" >
        warranty_period = #{warrantyPeriod,jdbcType=VARCHAR},
      </if>
      <if test="shippingDate != null" >
        shipping_date = #{shippingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="designatedLocation != null" >
        designated_location = #{designatedLocation,jdbcType=VARCHAR},
      </if>
      <if test="costBurden != null" >
        cost_burden = #{costBurden,jdbcType=VARCHAR},
      </if>
      <if test="inspectionAt != null" >
        inspection_at = #{inspectionAt,jdbcType=VARCHAR},
      </if>
      <if test="withinDays != null" >
        within_days = #{withinDays,jdbcType=VARCHAR},
      </if>
      <if test="methodAndTime != null" >
        method_and_time = #{methodAndTime,jdbcType=VARCHAR},
      </if>
      <if test="agreementName != null" >
        agreement_name = #{agreementName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenant != null" >
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.order.v2.model.PurchContractSimple" >
    update purch_contract_simple
    set purch_contract_id = #{purchContractId,jdbcType=INTEGER},
      product_requirement = #{productRequirement,jdbcType=VARCHAR},
      warranty_period = #{warrantyPeriod,jdbcType=VARCHAR},
      shipping_date = #{shippingDate,jdbcType=TIMESTAMP},
      designated_location = #{designatedLocation,jdbcType=VARCHAR},
      cost_burden = #{costBurden,jdbcType=VARCHAR},
      inspection_at = #{inspectionAt,jdbcType=VARCHAR},
      within_days = #{withinDays,jdbcType=VARCHAR},
      method_and_time = #{methodAndTime,jdbcType=VARCHAR},
      agreement_name = #{agreementName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      tenant = #{tenant,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>