<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.order.v2.dao.BacklogMapper" >
  <resultMap id="BaseResultMap" type="com.erui.order.v2.model.Backlog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
    <result column="place_system" property="placeSystem" jdbcType="VARCHAR" />
    <result column="function_explain_name" property="functionExplainName" jdbcType="VARCHAR" />
    <result column="function_explain_id" property="functionExplainId" jdbcType="INTEGER" />
    <result column="return_no" property="returnNo" jdbcType="VARCHAR" />
    <result column="inform_the_content" property="informTheContent" jdbcType="VARCHAR" />
    <result column="host_id" property="hostId" jdbcType="INTEGER" />
    <result column="follow_id" property="followId" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="del_yn" property="delYn" jdbcType="INTEGER" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="tenant" property="tenant" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, place_system, function_explain_name, function_explain_id, return_no, 
    inform_the_content, host_id, follow_id, uid, del_yn, delete_time, tenant
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.order.v2.model.BacklogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from backlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from backlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from backlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.order.v2.model.BacklogExample" >
    delete from backlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.order.v2.model.Backlog" >
    insert into backlog (id, create_date, place_system, 
      function_explain_name, function_explain_id, 
      return_no, inform_the_content, host_id, 
      follow_id, uid, del_yn, 
      delete_time, tenant)
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=VARCHAR}, #{placeSystem,jdbcType=VARCHAR}, 
      #{functionExplainName,jdbcType=VARCHAR}, #{functionExplainId,jdbcType=INTEGER}, 
      #{returnNo,jdbcType=VARCHAR}, #{informTheContent,jdbcType=VARCHAR}, #{hostId,jdbcType=INTEGER}, 
      #{followId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{delYn,jdbcType=INTEGER}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{tenant,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.order.v2.model.Backlog" >
    insert into backlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="placeSystem != null" >
        place_system,
      </if>
      <if test="functionExplainName != null" >
        function_explain_name,
      </if>
      <if test="functionExplainId != null" >
        function_explain_id,
      </if>
      <if test="returnNo != null" >
        return_no,
      </if>
      <if test="informTheContent != null" >
        inform_the_content,
      </if>
      <if test="hostId != null" >
        host_id,
      </if>
      <if test="followId != null" >
        follow_id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="delYn != null" >
        del_yn,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="tenant != null" >
        tenant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="placeSystem != null" >
        #{placeSystem,jdbcType=VARCHAR},
      </if>
      <if test="functionExplainName != null" >
        #{functionExplainName,jdbcType=VARCHAR},
      </if>
      <if test="functionExplainId != null" >
        #{functionExplainId,jdbcType=INTEGER},
      </if>
      <if test="returnNo != null" >
        #{returnNo,jdbcType=VARCHAR},
      </if>
      <if test="informTheContent != null" >
        #{informTheContent,jdbcType=VARCHAR},
      </if>
      <if test="hostId != null" >
        #{hostId,jdbcType=INTEGER},
      </if>
      <if test="followId != null" >
        #{followId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="delYn != null" >
        #{delYn,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenant != null" >
        #{tenant,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.order.v2.model.BacklogExample" resultType="java.lang.Integer" >
    select count(*) from backlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update backlog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.placeSystem != null" >
        place_system = #{record.placeSystem,jdbcType=VARCHAR},
      </if>
      <if test="record.functionExplainName != null" >
        function_explain_name = #{record.functionExplainName,jdbcType=VARCHAR},
      </if>
      <if test="record.functionExplainId != null" >
        function_explain_id = #{record.functionExplainId,jdbcType=INTEGER},
      </if>
      <if test="record.returnNo != null" >
        return_no = #{record.returnNo,jdbcType=VARCHAR},
      </if>
      <if test="record.informTheContent != null" >
        inform_the_content = #{record.informTheContent,jdbcType=VARCHAR},
      </if>
      <if test="record.hostId != null" >
        host_id = #{record.hostId,jdbcType=INTEGER},
      </if>
      <if test="record.followId != null" >
        follow_id = #{record.followId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.delYn != null" >
        del_yn = #{record.delYn,jdbcType=INTEGER},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenant != null" >
        tenant = #{record.tenant,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update backlog
    set id = #{record.id,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=VARCHAR},
      place_system = #{record.placeSystem,jdbcType=VARCHAR},
      function_explain_name = #{record.functionExplainName,jdbcType=VARCHAR},
      function_explain_id = #{record.functionExplainId,jdbcType=INTEGER},
      return_no = #{record.returnNo,jdbcType=VARCHAR},
      inform_the_content = #{record.informTheContent,jdbcType=VARCHAR},
      host_id = #{record.hostId,jdbcType=INTEGER},
      follow_id = #{record.followId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      del_yn = #{record.delYn,jdbcType=INTEGER},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      tenant = #{record.tenant,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.order.v2.model.Backlog" >
    update backlog
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="placeSystem != null" >
        place_system = #{placeSystem,jdbcType=VARCHAR},
      </if>
      <if test="functionExplainName != null" >
        function_explain_name = #{functionExplainName,jdbcType=VARCHAR},
      </if>
      <if test="functionExplainId != null" >
        function_explain_id = #{functionExplainId,jdbcType=INTEGER},
      </if>
      <if test="returnNo != null" >
        return_no = #{returnNo,jdbcType=VARCHAR},
      </if>
      <if test="informTheContent != null" >
        inform_the_content = #{informTheContent,jdbcType=VARCHAR},
      </if>
      <if test="hostId != null" >
        host_id = #{hostId,jdbcType=INTEGER},
      </if>
      <if test="followId != null" >
        follow_id = #{followId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="delYn != null" >
        del_yn = #{delYn,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenant != null" >
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.order.v2.model.Backlog" >
    update backlog
    set create_date = #{createDate,jdbcType=VARCHAR},
      place_system = #{placeSystem,jdbcType=VARCHAR},
      function_explain_name = #{functionExplainName,jdbcType=VARCHAR},
      function_explain_id = #{functionExplainId,jdbcType=INTEGER},
      return_no = #{returnNo,jdbcType=VARCHAR},
      inform_the_content = #{informTheContent,jdbcType=VARCHAR},
      host_id = #{hostId,jdbcType=INTEGER},
      follow_id = #{followId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      del_yn = #{delYn,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      tenant = #{tenant,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>