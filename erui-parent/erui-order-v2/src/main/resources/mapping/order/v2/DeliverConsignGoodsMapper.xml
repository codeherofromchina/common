<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.order.v2.dao.DeliverConsignGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.erui.order.v2.model.DeliverConsignGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="deliver_consign_id" property="deliverConsignId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="send_num" property="sendNum" jdbcType="INTEGER" />
    <result column="pack_require" property="packRequire" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="outbound_remark" property="outboundRemark" jdbcType="VARCHAR" />
    <result column="outbound_num" property="outboundNum" jdbcType="INTEGER" />
    <result column="straight_num" property="straightNum" jdbcType="INTEGER" />
    <result column="tenant" property="tenant" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, deliver_consign_id, goods_id, send_num, pack_require, create_time, create_user_id, 
    outbound_remark, outbound_num, straight_num, tenant
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.order.v2.model.DeliverConsignGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deliver_consign_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from deliver_consign_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deliver_consign_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.order.v2.model.DeliverConsignGoodsExample" >
    delete from deliver_consign_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.order.v2.model.DeliverConsignGoods" >
    insert into deliver_consign_goods (id, deliver_consign_id, goods_id, 
      send_num, pack_require, create_time, 
      create_user_id, outbound_remark, outbound_num, 
      straight_num, tenant)
    values (#{id,jdbcType=INTEGER}, #{deliverConsignId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{sendNum,jdbcType=INTEGER}, #{packRequire,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{outboundRemark,jdbcType=VARCHAR}, #{outboundNum,jdbcType=INTEGER}, 
      #{straightNum,jdbcType=INTEGER}, #{tenant,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.order.v2.model.DeliverConsignGoods" >
    insert into deliver_consign_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deliverConsignId != null" >
        deliver_consign_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="sendNum != null" >
        send_num,
      </if>
      <if test="packRequire != null" >
        pack_require,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="outboundRemark != null" >
        outbound_remark,
      </if>
      <if test="outboundNum != null" >
        outbound_num,
      </if>
      <if test="straightNum != null" >
        straight_num,
      </if>
      <if test="tenant != null" >
        tenant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deliverConsignId != null" >
        #{deliverConsignId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sendNum != null" >
        #{sendNum,jdbcType=INTEGER},
      </if>
      <if test="packRequire != null" >
        #{packRequire,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="outboundRemark != null" >
        #{outboundRemark,jdbcType=VARCHAR},
      </if>
      <if test="outboundNum != null" >
        #{outboundNum,jdbcType=INTEGER},
      </if>
      <if test="straightNum != null" >
        #{straightNum,jdbcType=INTEGER},
      </if>
      <if test="tenant != null" >
        #{tenant,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.order.v2.model.DeliverConsignGoodsExample" resultType="java.lang.Integer" >
    select count(*) from deliver_consign_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deliver_consign_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deliverConsignId != null" >
        deliver_consign_id = #{record.deliverConsignId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.sendNum != null" >
        send_num = #{record.sendNum,jdbcType=INTEGER},
      </if>
      <if test="record.packRequire != null" >
        pack_require = #{record.packRequire,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.outboundRemark != null" >
        outbound_remark = #{record.outboundRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.outboundNum != null" >
        outbound_num = #{record.outboundNum,jdbcType=INTEGER},
      </if>
      <if test="record.straightNum != null" >
        straight_num = #{record.straightNum,jdbcType=INTEGER},
      </if>
      <if test="record.tenant != null" >
        tenant = #{record.tenant,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deliver_consign_goods
    set id = #{record.id,jdbcType=INTEGER},
      deliver_consign_id = #{record.deliverConsignId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      send_num = #{record.sendNum,jdbcType=INTEGER},
      pack_require = #{record.packRequire,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      outbound_remark = #{record.outboundRemark,jdbcType=VARCHAR},
      outbound_num = #{record.outboundNum,jdbcType=INTEGER},
      straight_num = #{record.straightNum,jdbcType=INTEGER},
      tenant = #{record.tenant,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.order.v2.model.DeliverConsignGoods" >
    update deliver_consign_goods
    <set >
      <if test="deliverConsignId != null" >
        deliver_consign_id = #{deliverConsignId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sendNum != null" >
        send_num = #{sendNum,jdbcType=INTEGER},
      </if>
      <if test="packRequire != null" >
        pack_require = #{packRequire,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="outboundRemark != null" >
        outbound_remark = #{outboundRemark,jdbcType=VARCHAR},
      </if>
      <if test="outboundNum != null" >
        outbound_num = #{outboundNum,jdbcType=INTEGER},
      </if>
      <if test="straightNum != null" >
        straight_num = #{straightNum,jdbcType=INTEGER},
      </if>
      <if test="tenant != null" >
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.order.v2.model.DeliverConsignGoods" >
    update deliver_consign_goods
    set deliver_consign_id = #{deliverConsignId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      send_num = #{sendNum,jdbcType=INTEGER},
      pack_require = #{packRequire,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      outbound_remark = #{outboundRemark,jdbcType=VARCHAR},
      outbound_num = #{outboundNum,jdbcType=INTEGER},
      straight_num = #{straightNum,jdbcType=INTEGER},
      tenant = #{tenant,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>