<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.order.v2.dao.InstockGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.erui.order.v2.model.InstockGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="instock_id" property="instockId" jdbcType="INTEGER" />
    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
    <result column="qualified_num" property="qualifiedNum" jdbcType="INTEGER" />
    <result column="inspect_apply_goods_id" property="inspectApplyGoodsId" jdbcType="INTEGER" />
    <result column="instock_num" property="instockNum" jdbcType="INTEGER" />
    <result column="instock_stock" property="instockStock" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, instock_id, contract_no, project_no, qualified_num, inspect_apply_goods_id, instock_num, 
    instock_stock, create_time, create_user_id, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.order.v2.model.InstockGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from instock_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from instock_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from instock_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.order.v2.model.InstockGoodsExample" >
    delete from instock_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.order.v2.model.InstockGoods" >
    insert into instock_goods (id, instock_id, contract_no, 
      project_no, qualified_num, inspect_apply_goods_id, 
      instock_num, instock_stock, create_time, 
      create_user_id, update_time)
    values (#{id,jdbcType=INTEGER}, #{instockId,jdbcType=INTEGER}, #{contractNo,jdbcType=VARCHAR}, 
      #{projectNo,jdbcType=VARCHAR}, #{qualifiedNum,jdbcType=INTEGER}, #{inspectApplyGoodsId,jdbcType=INTEGER}, 
      #{instockNum,jdbcType=INTEGER}, #{instockStock,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.order.v2.model.InstockGoods" >
    insert into instock_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="instockId != null" >
        instock_id,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
      <if test="qualifiedNum != null" >
        qualified_num,
      </if>
      <if test="inspectApplyGoodsId != null" >
        inspect_apply_goods_id,
      </if>
      <if test="instockNum != null" >
        instock_num,
      </if>
      <if test="instockStock != null" >
        instock_stock,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="instockId != null" >
        #{instockId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="qualifiedNum != null" >
        #{qualifiedNum,jdbcType=INTEGER},
      </if>
      <if test="inspectApplyGoodsId != null" >
        #{inspectApplyGoodsId,jdbcType=INTEGER},
      </if>
      <if test="instockNum != null" >
        #{instockNum,jdbcType=INTEGER},
      </if>
      <if test="instockStock != null" >
        #{instockStock,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.order.v2.model.InstockGoodsExample" resultType="java.lang.Integer" >
    select count(*) from instock_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update instock_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.instockId != null" >
        instock_id = #{record.instockId,jdbcType=INTEGER},
      </if>
      <if test="record.contractNo != null" >
        contract_no = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.projectNo != null" >
        project_no = #{record.projectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.qualifiedNum != null" >
        qualified_num = #{record.qualifiedNum,jdbcType=INTEGER},
      </if>
      <if test="record.inspectApplyGoodsId != null" >
        inspect_apply_goods_id = #{record.inspectApplyGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.instockNum != null" >
        instock_num = #{record.instockNum,jdbcType=INTEGER},
      </if>
      <if test="record.instockStock != null" >
        instock_stock = #{record.instockStock,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update instock_goods
    set id = #{record.id,jdbcType=INTEGER},
      instock_id = #{record.instockId,jdbcType=INTEGER},
      contract_no = #{record.contractNo,jdbcType=VARCHAR},
      project_no = #{record.projectNo,jdbcType=VARCHAR},
      qualified_num = #{record.qualifiedNum,jdbcType=INTEGER},
      inspect_apply_goods_id = #{record.inspectApplyGoodsId,jdbcType=INTEGER},
      instock_num = #{record.instockNum,jdbcType=INTEGER},
      instock_stock = #{record.instockStock,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.order.v2.model.InstockGoods" >
    update instock_goods
    <set >
      <if test="instockId != null" >
        instock_id = #{instockId,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="qualifiedNum != null" >
        qualified_num = #{qualifiedNum,jdbcType=INTEGER},
      </if>
      <if test="inspectApplyGoodsId != null" >
        inspect_apply_goods_id = #{inspectApplyGoodsId,jdbcType=INTEGER},
      </if>
      <if test="instockNum != null" >
        instock_num = #{instockNum,jdbcType=INTEGER},
      </if>
      <if test="instockStock != null" >
        instock_stock = #{instockStock,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.order.v2.model.InstockGoods" >
    update instock_goods
    set instock_id = #{instockId,jdbcType=INTEGER},
      contract_no = #{contractNo,jdbcType=VARCHAR},
      project_no = #{projectNo,jdbcType=VARCHAR},
      qualified_num = #{qualifiedNum,jdbcType=INTEGER},
      inspect_apply_goods_id = #{inspectApplyGoodsId,jdbcType=INTEGER},
      instock_num = #{instockNum,jdbcType=INTEGER},
      instock_stock = #{instockStock,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>