<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.order.v2.dao.LogisticsMapper" >
  <resultMap id="BaseResultMap" type="com.erui.order.v2.model.Logistics" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="deliver_detail_id" property="deliverDetailId" jdbcType="INTEGER" />
    <result column="deliver_detail_no" property="deliverDetailNo" jdbcType="VARCHAR" />
    <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
    <result column="deliver_consign_no" property="deliverConsignNo" jdbcType="VARCHAR" />
    <result column="logistics_user_id" property="logisticsUserId" jdbcType="INTEGER" />
    <result column="logistics_user_name" property="logisticsUserName" jdbcType="VARCHAR" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="out_check" property="outCheck" jdbcType="INTEGER" />
    <result column="out_yn" property="outYn" jdbcType="INTEGER" />
    <result column="submenu_name" property="submenuName" jdbcType="VARCHAR" />
    <result column="submenu_id" property="submenuId" jdbcType="INTEGER" />
    <result column="tenant" property="tenant" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, deliver_detail_id, deliver_detail_no, logistics_no, contract_no, deliver_consign_no, 
    logistics_user_id, logistics_user_name, project_no, pid, out_check, out_yn, submenu_name, 
    submenu_id, tenant
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.order.v2.model.LogisticsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from logistics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.order.v2.model.LogisticsExample" >
    delete from logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.order.v2.model.Logistics" >
    insert into logistics (id, deliver_detail_id, deliver_detail_no, 
      logistics_no, contract_no, deliver_consign_no, 
      logistics_user_id, logistics_user_name, project_no, 
      pid, out_check, out_yn, 
      submenu_name, submenu_id, tenant
      )
    values (#{id,jdbcType=INTEGER}, #{deliverDetailId,jdbcType=INTEGER}, #{deliverDetailNo,jdbcType=VARCHAR}, 
      #{logisticsNo,jdbcType=VARCHAR}, #{contractNo,jdbcType=VARCHAR}, #{deliverConsignNo,jdbcType=VARCHAR}, 
      #{logisticsUserId,jdbcType=INTEGER}, #{logisticsUserName,jdbcType=VARCHAR}, #{projectNo,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{outCheck,jdbcType=INTEGER}, #{outYn,jdbcType=INTEGER}, 
      #{submenuName,jdbcType=VARCHAR}, #{submenuId,jdbcType=INTEGER}, #{tenant,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.erui.order.v2.model.Logistics" >
    insert into logistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deliverDetailId != null" >
        deliver_detail_id,
      </if>
      <if test="deliverDetailNo != null" >
        deliver_detail_no,
      </if>
      <if test="logisticsNo != null" >
        logistics_no,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="deliverConsignNo != null" >
        deliver_consign_no,
      </if>
      <if test="logisticsUserId != null" >
        logistics_user_id,
      </if>
      <if test="logisticsUserName != null" >
        logistics_user_name,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="outCheck != null" >
        out_check,
      </if>
      <if test="outYn != null" >
        out_yn,
      </if>
      <if test="submenuName != null" >
        submenu_name,
      </if>
      <if test="submenuId != null" >
        submenu_id,
      </if>
      <if test="tenant != null" >
        tenant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deliverDetailId != null" >
        #{deliverDetailId,jdbcType=INTEGER},
      </if>
      <if test="deliverDetailNo != null" >
        #{deliverDetailNo,jdbcType=VARCHAR},
      </if>
      <if test="logisticsNo != null" >
        #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverConsignNo != null" >
        #{deliverConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="logisticsUserId != null" >
        #{logisticsUserId,jdbcType=INTEGER},
      </if>
      <if test="logisticsUserName != null" >
        #{logisticsUserName,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="outCheck != null" >
        #{outCheck,jdbcType=INTEGER},
      </if>
      <if test="outYn != null" >
        #{outYn,jdbcType=INTEGER},
      </if>
      <if test="submenuName != null" >
        #{submenuName,jdbcType=VARCHAR},
      </if>
      <if test="submenuId != null" >
        #{submenuId,jdbcType=INTEGER},
      </if>
      <if test="tenant != null" >
        #{tenant,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.order.v2.model.LogisticsExample" resultType="java.lang.Integer" >
    select count(*) from logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update logistics
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deliverDetailId != null" >
        deliver_detail_id = #{record.deliverDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.deliverDetailNo != null" >
        deliver_detail_no = #{record.deliverDetailNo,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsNo != null" >
        logistics_no = #{record.logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNo != null" >
        contract_no = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverConsignNo != null" >
        deliver_consign_no = #{record.deliverConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsUserId != null" >
        logistics_user_id = #{record.logisticsUserId,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsUserName != null" >
        logistics_user_name = #{record.logisticsUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectNo != null" >
        project_no = #{record.projectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.outCheck != null" >
        out_check = #{record.outCheck,jdbcType=INTEGER},
      </if>
      <if test="record.outYn != null" >
        out_yn = #{record.outYn,jdbcType=INTEGER},
      </if>
      <if test="record.submenuName != null" >
        submenu_name = #{record.submenuName,jdbcType=VARCHAR},
      </if>
      <if test="record.submenuId != null" >
        submenu_id = #{record.submenuId,jdbcType=INTEGER},
      </if>
      <if test="record.tenant != null" >
        tenant = #{record.tenant,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update logistics
    set id = #{record.id,jdbcType=INTEGER},
      deliver_detail_id = #{record.deliverDetailId,jdbcType=INTEGER},
      deliver_detail_no = #{record.deliverDetailNo,jdbcType=VARCHAR},
      logistics_no = #{record.logisticsNo,jdbcType=VARCHAR},
      contract_no = #{record.contractNo,jdbcType=VARCHAR},
      deliver_consign_no = #{record.deliverConsignNo,jdbcType=VARCHAR},
      logistics_user_id = #{record.logisticsUserId,jdbcType=INTEGER},
      logistics_user_name = #{record.logisticsUserName,jdbcType=VARCHAR},
      project_no = #{record.projectNo,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      out_check = #{record.outCheck,jdbcType=INTEGER},
      out_yn = #{record.outYn,jdbcType=INTEGER},
      submenu_name = #{record.submenuName,jdbcType=VARCHAR},
      submenu_id = #{record.submenuId,jdbcType=INTEGER},
      tenant = #{record.tenant,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.order.v2.model.Logistics" >
    update logistics
    <set >
      <if test="deliverDetailId != null" >
        deliver_detail_id = #{deliverDetailId,jdbcType=INTEGER},
      </if>
      <if test="deliverDetailNo != null" >
        deliver_detail_no = #{deliverDetailNo,jdbcType=VARCHAR},
      </if>
      <if test="logisticsNo != null" >
        logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverConsignNo != null" >
        deliver_consign_no = #{deliverConsignNo,jdbcType=VARCHAR},
      </if>
      <if test="logisticsUserId != null" >
        logistics_user_id = #{logisticsUserId,jdbcType=INTEGER},
      </if>
      <if test="logisticsUserName != null" >
        logistics_user_name = #{logisticsUserName,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="outCheck != null" >
        out_check = #{outCheck,jdbcType=INTEGER},
      </if>
      <if test="outYn != null" >
        out_yn = #{outYn,jdbcType=INTEGER},
      </if>
      <if test="submenuName != null" >
        submenu_name = #{submenuName,jdbcType=VARCHAR},
      </if>
      <if test="submenuId != null" >
        submenu_id = #{submenuId,jdbcType=INTEGER},
      </if>
      <if test="tenant != null" >
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.order.v2.model.Logistics" >
    update logistics
    set deliver_detail_id = #{deliverDetailId,jdbcType=INTEGER},
      deliver_detail_no = #{deliverDetailNo,jdbcType=VARCHAR},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      contract_no = #{contractNo,jdbcType=VARCHAR},
      deliver_consign_no = #{deliverConsignNo,jdbcType=VARCHAR},
      logistics_user_id = #{logisticsUserId,jdbcType=INTEGER},
      logistics_user_name = #{logisticsUserName,jdbcType=VARCHAR},
      project_no = #{projectNo,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      out_check = #{outCheck,jdbcType=INTEGER},
      out_yn = #{outYn,jdbcType=INTEGER},
      submenu_name = #{submenuName,jdbcType=VARCHAR},
      submenu_id = #{submenuId,jdbcType=INTEGER},
      tenant = #{tenant,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>