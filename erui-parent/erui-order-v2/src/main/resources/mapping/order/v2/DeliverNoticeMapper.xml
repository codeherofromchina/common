<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.order.v2.dao.DeliverNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.erui.order.v2.model.DeliverNotice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="deliver_notice_no" property="deliverNoticeNo" jdbcType="VARCHAR" />
    <result column="sender_id" property="senderId" jdbcType="INTEGER" />
    <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
    <result column="send_date" property="sendDate" jdbcType="DATE" />
    <result column="trade_terms" property="tradeTerms" jdbcType="VARCHAR" />
    <result column="to_place" property="toPlace" jdbcType="VARCHAR" />
    <result column="transport_type_bn" property="transportTypeBn" jdbcType="VARCHAR" />
    <result column="technical_uid" property="technicalUid" jdbcType="INTEGER" />
    <result column="urgency" property="urgency" jdbcType="VARCHAR" />
    <result column="delivery_date" property="deliveryDate" jdbcType="DATE" />
    <result column="numers" property="numers" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.erui.order.v2.model.DeliverNoticeWithBLOBs" extends="BaseResultMap" >
    <result column="prepare_req" property="prepareReq" jdbcType="LONGVARCHAR" />
    <result column="package_req" property="packageReq" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, deliver_notice_no, sender_id, sender_name, send_date, trade_terms, to_place, 
    transport_type_bn, technical_uid, urgency, delivery_date, numers, create_time, create_user_id, 
    create_user_name, status, update_time
  </sql>
  <sql id="Blob_Column_List" >
    prepare_req, package_req
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.erui.order.v2.model.DeliverNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deliver_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.order.v2.model.DeliverNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deliver_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from deliver_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deliver_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.order.v2.model.DeliverNoticeExample" >
    delete from deliver_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.order.v2.model.DeliverNoticeWithBLOBs" >
    insert into deliver_notice (id, deliver_notice_no, sender_id, 
      sender_name, send_date, trade_terms, 
      to_place, transport_type_bn, technical_uid, 
      urgency, delivery_date, numers, 
      create_time, create_user_id, create_user_name, 
      status, update_time, prepare_req, 
      package_req)
    values (#{id,jdbcType=INTEGER}, #{deliverNoticeNo,jdbcType=VARCHAR}, #{senderId,jdbcType=INTEGER}, 
      #{senderName,jdbcType=VARCHAR}, #{sendDate,jdbcType=DATE}, #{tradeTerms,jdbcType=VARCHAR}, 
      #{toPlace,jdbcType=VARCHAR}, #{transportTypeBn,jdbcType=VARCHAR}, #{technicalUid,jdbcType=INTEGER}, 
      #{urgency,jdbcType=VARCHAR}, #{deliveryDate,jdbcType=DATE}, #{numers,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{prepareReq,jdbcType=LONGVARCHAR}, 
      #{packageReq,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.order.v2.model.DeliverNoticeWithBLOBs" >
    insert into deliver_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deliverNoticeNo != null" >
        deliver_notice_no,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="senderName != null" >
        sender_name,
      </if>
      <if test="sendDate != null" >
        send_date,
      </if>
      <if test="tradeTerms != null" >
        trade_terms,
      </if>
      <if test="toPlace != null" >
        to_place,
      </if>
      <if test="transportTypeBn != null" >
        transport_type_bn,
      </if>
      <if test="technicalUid != null" >
        technical_uid,
      </if>
      <if test="urgency != null" >
        urgency,
      </if>
      <if test="deliveryDate != null" >
        delivery_date,
      </if>
      <if test="numers != null" >
        numers,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="prepareReq != null" >
        prepare_req,
      </if>
      <if test="packageReq != null" >
        package_req,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deliverNoticeNo != null" >
        #{deliverNoticeNo,jdbcType=VARCHAR},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="senderName != null" >
        #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null" >
        #{sendDate,jdbcType=DATE},
      </if>
      <if test="tradeTerms != null" >
        #{tradeTerms,jdbcType=VARCHAR},
      </if>
      <if test="toPlace != null" >
        #{toPlace,jdbcType=VARCHAR},
      </if>
      <if test="transportTypeBn != null" >
        #{transportTypeBn,jdbcType=VARCHAR},
      </if>
      <if test="technicalUid != null" >
        #{technicalUid,jdbcType=INTEGER},
      </if>
      <if test="urgency != null" >
        #{urgency,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDate != null" >
        #{deliveryDate,jdbcType=DATE},
      </if>
      <if test="numers != null" >
        #{numers,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prepareReq != null" >
        #{prepareReq,jdbcType=LONGVARCHAR},
      </if>
      <if test="packageReq != null" >
        #{packageReq,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.order.v2.model.DeliverNoticeExample" resultType="java.lang.Integer" >
    select count(*) from deliver_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deliver_notice
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deliverNoticeNo != null" >
        deliver_notice_no = #{record.deliverNoticeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.senderName != null" >
        sender_name = #{record.senderName,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null" >
        send_date = #{record.sendDate,jdbcType=DATE},
      </if>
      <if test="record.tradeTerms != null" >
        trade_terms = #{record.tradeTerms,jdbcType=VARCHAR},
      </if>
      <if test="record.toPlace != null" >
        to_place = #{record.toPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.transportTypeBn != null" >
        transport_type_bn = #{record.transportTypeBn,jdbcType=VARCHAR},
      </if>
      <if test="record.technicalUid != null" >
        technical_uid = #{record.technicalUid,jdbcType=INTEGER},
      </if>
      <if test="record.urgency != null" >
        urgency = #{record.urgency,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryDate != null" >
        delivery_date = #{record.deliveryDate,jdbcType=DATE},
      </if>
      <if test="record.numers != null" >
        numers = #{record.numers,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.prepareReq != null" >
        prepare_req = #{record.prepareReq,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.packageReq != null" >
        package_req = #{record.packageReq,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update deliver_notice
    set id = #{record.id,jdbcType=INTEGER},
      deliver_notice_no = #{record.deliverNoticeNo,jdbcType=VARCHAR},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      sender_name = #{record.senderName,jdbcType=VARCHAR},
      send_date = #{record.sendDate,jdbcType=DATE},
      trade_terms = #{record.tradeTerms,jdbcType=VARCHAR},
      to_place = #{record.toPlace,jdbcType=VARCHAR},
      transport_type_bn = #{record.transportTypeBn,jdbcType=VARCHAR},
      technical_uid = #{record.technicalUid,jdbcType=INTEGER},
      urgency = #{record.urgency,jdbcType=VARCHAR},
      delivery_date = #{record.deliveryDate,jdbcType=DATE},
      numers = #{record.numers,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      prepare_req = #{record.prepareReq,jdbcType=LONGVARCHAR},
      package_req = #{record.packageReq,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deliver_notice
    set id = #{record.id,jdbcType=INTEGER},
      deliver_notice_no = #{record.deliverNoticeNo,jdbcType=VARCHAR},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      sender_name = #{record.senderName,jdbcType=VARCHAR},
      send_date = #{record.sendDate,jdbcType=DATE},
      trade_terms = #{record.tradeTerms,jdbcType=VARCHAR},
      to_place = #{record.toPlace,jdbcType=VARCHAR},
      transport_type_bn = #{record.transportTypeBn,jdbcType=VARCHAR},
      technical_uid = #{record.technicalUid,jdbcType=INTEGER},
      urgency = #{record.urgency,jdbcType=VARCHAR},
      delivery_date = #{record.deliveryDate,jdbcType=DATE},
      numers = #{record.numers,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.order.v2.model.DeliverNoticeWithBLOBs" >
    update deliver_notice
    <set >
      <if test="deliverNoticeNo != null" >
        deliver_notice_no = #{deliverNoticeNo,jdbcType=VARCHAR},
      </if>
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="senderName != null" >
        sender_name = #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null" >
        send_date = #{sendDate,jdbcType=DATE},
      </if>
      <if test="tradeTerms != null" >
        trade_terms = #{tradeTerms,jdbcType=VARCHAR},
      </if>
      <if test="toPlace != null" >
        to_place = #{toPlace,jdbcType=VARCHAR},
      </if>
      <if test="transportTypeBn != null" >
        transport_type_bn = #{transportTypeBn,jdbcType=VARCHAR},
      </if>
      <if test="technicalUid != null" >
        technical_uid = #{technicalUid,jdbcType=INTEGER},
      </if>
      <if test="urgency != null" >
        urgency = #{urgency,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDate != null" >
        delivery_date = #{deliveryDate,jdbcType=DATE},
      </if>
      <if test="numers != null" >
        numers = #{numers,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prepareReq != null" >
        prepare_req = #{prepareReq,jdbcType=LONGVARCHAR},
      </if>
      <if test="packageReq != null" >
        package_req = #{packageReq,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.erui.order.v2.model.DeliverNoticeWithBLOBs" >
    update deliver_notice
    set deliver_notice_no = #{deliverNoticeNo,jdbcType=VARCHAR},
      sender_id = #{senderId,jdbcType=INTEGER},
      sender_name = #{senderName,jdbcType=VARCHAR},
      send_date = #{sendDate,jdbcType=DATE},
      trade_terms = #{tradeTerms,jdbcType=VARCHAR},
      to_place = #{toPlace,jdbcType=VARCHAR},
      transport_type_bn = #{transportTypeBn,jdbcType=VARCHAR},
      technical_uid = #{technicalUid,jdbcType=INTEGER},
      urgency = #{urgency,jdbcType=VARCHAR},
      delivery_date = #{deliveryDate,jdbcType=DATE},
      numers = #{numers,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      prepare_req = #{prepareReq,jdbcType=LONGVARCHAR},
      package_req = #{packageReq,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.order.v2.model.DeliverNotice" >
    update deliver_notice
    set deliver_notice_no = #{deliverNoticeNo,jdbcType=VARCHAR},
      sender_id = #{senderId,jdbcType=INTEGER},
      sender_name = #{senderName,jdbcType=VARCHAR},
      send_date = #{sendDate,jdbcType=DATE},
      trade_terms = #{tradeTerms,jdbcType=VARCHAR},
      to_place = #{toPlace,jdbcType=VARCHAR},
      transport_type_bn = #{transportTypeBn,jdbcType=VARCHAR},
      technical_uid = #{technicalUid,jdbcType=INTEGER},
      urgency = #{urgency,jdbcType=VARCHAR},
      delivery_date = #{deliveryDate,jdbcType=DATE},
      numers = #{numers,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>