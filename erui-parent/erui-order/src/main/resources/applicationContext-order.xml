<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
       default-lazy-init="true">
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="com.erui.order"/>
    <context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc-order.properties"/>
    <bean id="orderProp" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <array>
                <value>classpath:order.conf</value>
            </array>
        </property>
    </bean>

    <bean id="dataSourceOrder" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${order.master.driver}"/>
        <property name="url" value="${order.master.url}"/>
        <property name="username" value="${order.master.username}"/>
        <property name="password" value="${order.master.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${order.master.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${order.master.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${order.master.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${order.master.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${order.master.maxWait}"></property>
        <property name="defaultAutoCommit" value="false"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="SELECT 1"/>
    </bean>
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${spring.redis.maxIdle}" />
        <property name="maxTotal" value="1000"/>
        <property name="testOnBorrow" value="${spring.redis.testOnBorrow}" />
    </bean>

    <bean id="connectionRedis" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy"
          p:host-name="${spring.redis.host}" p:port="${spring.redis.port}" p:password="${spring.redis.password}"
          p:database="${spring.redis.database}"  p:pool-config-ref="poolConfig"/>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory"   ref="connectionRedis" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>
    <!-- JPA实体管理工厂的配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSourceOrder"/>

        <property name="packagesToScan" value="com.erui.order.entity"/><!--待扫描的实体类包，不再需要persistence.xml了-->
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="false"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">none</prop>
            </props>
        </property>
    </bean>


    <jpa:repositories base-package="com.erui.order.dao"
                      transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory" ></jpa:repositories>
    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>


    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

</beans>