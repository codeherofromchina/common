<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="com.erui.report"/>
    <context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc-report.properties"/>

    <!--<import resource="app-report-quartz.xml"></import>-->

    <bean id="masterDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${report.master.driver}"/>
        <property name="url" value="${report.master.url}"/>
        <property name="username" value="${report.master.username}"/>
        <property name="password" value="${report.master.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${report.master.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${report.master.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${report.master.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${report.master.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${report.master.maxWait}"></property>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="SELECT 1"/>
    </bean>


    <bean id="slaveDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${report.slave.driver}"/>
        <property name="url" value="${report.slave.url}"/>
        <property name="username" value="${report.slave.username}"/>
        <property name="password" value="${report.slave.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${report.slave.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${report.slave.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${report.slave.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${report.slave.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${report.slave.maxWait}"></property>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="SELECT 1"/>
    </bean>

    <bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="masterDataSource"/><!-- 指定数据源 -->
        <property name="mapperLocations" value="classpath:mapping/report/*.xml"></property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=false
                            supportMethodsArguments=true
                            params=count=countSql
                            pageSizeZero=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <bean id="slaveSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="slaveDataSource"/><!-- 指定数据源 -->
        <property name="mapperLocations" value="classpath:mapping/report/*.xml"></property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=false
                            supportMethodsArguments=true
                            params=count=countSql
                            pageSizeZero=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="mapperScannerConfigurer01" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.erui.report.dao"/> <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
        <property name="sqlSessionFactoryBeanName" value="masterSqlSessionFactory"></property>
    </bean>
    <bean id="mapperScannerConfigurer02" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.erui.report.dao"/> <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
        <property name="sqlSessionFactoryBeanName" value="slaveSqlSessionFactory"></property>
    </bean>

    <bean id="sqlSessionMaster" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="masterSqlSessionFactory"/>
    </bean>

    <bean id="sqlSessionSlave" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="slaveSqlSessionFactory"/>
    </bean>

    <bean id="transactionManagerM"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="masterDataSource"/>
    </bean>

    <bean id="transactionManagerS"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="slaveDataSource"/>
    </bean>


    <tx:advice id="txAdviceM" transaction-manager="transactionManagerM">
        <tx:attributes>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="txAdviceS" transaction-manager="transactionManagerS">
        <tx:attributes>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="appServiceM"
                      expression="execution(* com.erui.report.service..*Service*.*(..))"/>
        <aop:advisor advice-ref="txAdviceM" pointcut-ref="appServiceM"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="appServiceS"
                      expression="execution(* com.erui.report.service..*Service*.*(..))"/>
        <aop:advisor advice-ref="txAdviceS" pointcut-ref="appServiceS"/>
    </aop:config>
</beans>