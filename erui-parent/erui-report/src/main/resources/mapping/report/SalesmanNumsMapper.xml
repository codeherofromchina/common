<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.report.dao.SalesmanNumsMapper" >
  <resultMap id="BaseResultMap" type="com.erui.report.model.SalesmanNums" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="start_prescription" property="startPrescription" jdbcType="DATE" />
    <result column="end_prescription" property="endPrescription" jdbcType="DATE" />
    <result column="country_bn" property="countryBn" jdbcType="VARCHAR" />
    <result column="country_name" property="countryName" jdbcType="VARCHAR" />
    <result column="area_bn" property="areaBn" jdbcType="VARCHAR" />
    <result column="area_name" property="areaName" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, start_prescription, end_prescription, country_bn, country_name, area_bn, area_name, 
    num, create_user_id, create_user_name, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.report.model.SalesmanNumsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from salesman_nums
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from salesman_nums
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from salesman_nums
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.report.model.SalesmanNumsExample" >
    delete from salesman_nums
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.report.model.SalesmanNums" >
    insert into salesman_nums (id, start_prescription, end_prescription, 
      country_bn, country_name, area_bn, 
      area_name, num, create_user_id, 
      create_user_name, create_time)
    values (#{id,jdbcType=INTEGER}, #{startPrescription,jdbcType=DATE}, #{endPrescription,jdbcType=DATE}, 
      #{countryBn,jdbcType=VARCHAR}, #{countryName,jdbcType=VARCHAR}, #{areaBn,jdbcType=VARCHAR}, 
      #{areaName,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, 
      #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.report.model.SalesmanNums" >
    insert into salesman_nums
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="startPrescription != null" >
        start_prescription,
      </if>
      <if test="endPrescription != null" >
        end_prescription,
      </if>
      <if test="countryBn != null" >
        country_bn,
      </if>
      <if test="countryName != null" >
        country_name,
      </if>
      <if test="areaBn != null" >
        area_bn,
      </if>
      <if test="areaName != null" >
        area_name,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startPrescription != null" >
        #{startPrescription,jdbcType=DATE},
      </if>
      <if test="endPrescription != null" >
        #{endPrescription,jdbcType=DATE},
      </if>
      <if test="countryBn != null" >
        #{countryBn,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null" >
        #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="areaBn != null" >
        #{areaBn,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.report.model.SalesmanNumsExample" resultType="java.lang.Integer" >
    select count(*) from salesman_nums
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update salesman_nums
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.startPrescription != null" >
        start_prescription = #{record.startPrescription,jdbcType=DATE},
      </if>
      <if test="record.endPrescription != null" >
        end_prescription = #{record.endPrescription,jdbcType=DATE},
      </if>
      <if test="record.countryBn != null" >
        country_bn = #{record.countryBn,jdbcType=VARCHAR},
      </if>
      <if test="record.countryName != null" >
        country_name = #{record.countryName,jdbcType=VARCHAR},
      </if>
      <if test="record.areaBn != null" >
        area_bn = #{record.areaBn,jdbcType=VARCHAR},
      </if>
      <if test="record.areaName != null" >
        area_name = #{record.areaName,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update salesman_nums
    set id = #{record.id,jdbcType=INTEGER},
      start_prescription = #{record.startPrescription,jdbcType=DATE},
      end_prescription = #{record.endPrescription,jdbcType=DATE},
      country_bn = #{record.countryBn,jdbcType=VARCHAR},
      country_name = #{record.countryName,jdbcType=VARCHAR},
      area_bn = #{record.areaBn,jdbcType=VARCHAR},
      area_name = #{record.areaName,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.report.model.SalesmanNums" >
    update salesman_nums
    <set >
      <if test="startPrescription != null" >
        start_prescription = #{startPrescription,jdbcType=DATE},
      </if>
      <if test="endPrescription != null" >
        end_prescription = #{endPrescription,jdbcType=DATE},
      </if>
      <if test="countryBn != null" >
        country_bn = #{countryBn,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null" >
        country_name = #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="areaBn != null" >
        area_bn = #{areaBn,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.report.model.SalesmanNums" >
    update salesman_nums
    set start_prescription = #{startPrescription,jdbcType=DATE},
      end_prescription = #{endPrescription,jdbcType=DATE},
      country_bn = #{countryBn,jdbcType=VARCHAR},
      country_name = #{countryName,jdbcType=VARCHAR},
      area_bn = #{areaBn,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 根据给定参数的开始时间和结束时间查询销售人员数量、国家、地区等信息 -->
  <select id="selectNumsWhereTime" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    t1.start_prescription,
    t1.end_prescription,
    t1.country_bn,
    t1.country_name,
    t3.`name` AS area_name,
    t3.bn AS area_bn,
    t1.num
    FROM
    erui_report.salesman_nums t1
    LEFT JOIN
    erui_operation.market_area_country t2 ON t1.country_bn = t2.country_bn
    LEFT JOIN
    erui_operation.market_area t3 ON t2.market_area_bn = t3.bn
    AND t3.lang = 'zh'
    WHERE
    start_prescription <![CDATA[ <= ]]> #{endTime}
    AND end_prescription >= #{startTime}
  </select>
  
  <!-- 按地区分组，查找给定时间段内的各个地区销售人员平均数量 -->
  <select id="avgManNumInMonthByArea" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT
			area_name AS `name`,
			AVG( num ) AS avgNum
		FROM
			erui_report.salesman_nums 
		WHERE
			start_prescription BETWEEN #{startTime}  AND #{startTime} 
			AND area_name IS NOT NULL 
		GROUP BY
			area_name
  </select>
  
  <!-- 按国家分组，查找给定时间段内的各个国家销售人员平均数量 -->
  <select id="avgManNumInMonthByCountry" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT
			country_name AS `name`,
			AVG( num ) AS avgNum
		FROM
			erui_report.salesman_nums 
		WHERE
			start_prescription BETWEEN #{startTime}  AND #{startTime} 
			AND country_name IS NOT NULL 
		GROUP BY
			country_name
  </select>
  
  <!-- 按事业部分组，查找给定时间段内的各个事业部销售人员平均数量 -->
  <select id="avgManNumInMonthByOrg" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT
			org_name AS `name`,
			AVG( num ) AS avgNum
		FROM
			erui_report.salesman_org_nums 
		WHERE
			start_prescription BETWEEN #{startTime}  AND #{startTime} 
			AND org_name IS NOT NULL 
		GROUP BY
			org_name
  </select>
</mapper>