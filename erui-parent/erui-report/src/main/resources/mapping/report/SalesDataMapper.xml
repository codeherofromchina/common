<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.report.dao.SalesDataMapper">


    <!-- 查询销售数据的趋势图-->
    <!-- 2018-07-31 修改，之前是按照rollin_time的时间纬度来划分的，现在修改为按照erui_rfq.inquiry_check_log中事业部审核流出的时间划分 -->
    <select id="selectInqQuoteTrendData" resultType="java.util.Map" parameterType="java.util.Map">
        <!--
            SELECT
            COUNT(1) AS inqCount ,
            IFNULL(SUM(IFNULL(quotation_price,0.00)),0.00) AS inqAmount ,
            SUM((CASE WHEN quoted_status ='已报价' OR quoted_status='已完成' THEN 1 ELSE 0 END)) AS quoteCount,
            SUM(IFNULL((CASE WHEN quoted_status ='已报价' OR quoted_status='已完成' THEN quotation_price  ELSE 0.00 END),0.00)) AS quoteAmount,
            FROM_DAYS(TO_DAYS(z.log_create_at)) AS datetime
            FROM erui_rfq.v_inquiry_count2
            left join (
                SELECT inquiry_id as log_inquiry_id,max(created_at) as log_create_at FROM
                erui_rfq.inquiry_check_log where in_node = 'MARKET_APPROVING' group by inquiry_id
            ) as z ON erui_rfq.v_inquiry_count2.id = `z`.`log_inquiry_id`
            WHERE 1=1
            <if test="startTime!=null and endTime!=null">
                and z.log_create_at BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s") and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s")
            </if>
            GROUP BY TO_DAYS(z.log_create_at) HAVING datetime IS NOT NULL
        -->
        SELECT
        COUNT(1) AS inqCount,
        IFNULL(SUM(IFNULL(total_quote_price, 0.00)),
        0.00) AS inqAmount,
        SUM((CASE
        WHEN
        quote_status = 'QUOTED'
        OR quote_status = 'COMPLETED'
        THEN
        1
        ELSE 0
        END)) AS quoteCount,
        SUM(IFNULL((CASE
        WHEN
        quote_status = 'QUOTED'
        OR quote_status = 'COMPLETED'
        THEN
        total_quote_price
        ELSE 0.00
        END),
        0.00)) AS quoteAmount,
        FROM_DAYS(TO_DAYS(z.log_create_at)) AS datetime
        FROM
        erui_rfq.inquiry t1
        LEFT JOIN
        erui_rfq.final_quote t2 ON t1.id = t2.inquiry_id,
        (SELECT
        inquiry_id AS log_inquiry_id, created_at AS log_create_at
        FROM
        erui_rfq.inquiry_check_log
        WHERE
        created_at BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s") and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s")
        AND in_node = 'MARKET_APPROVING'
        GROUP BY inquiry_id) AS z
        WHERE
        t1.id = `z`.`log_inquiry_id`
        GROUP BY TO_DAYS(z.log_create_at)
        HAVING datetime IS NOT NULL
    </select>

    <!-- 查询各大区和国家的数据明细 ： 询单金额 、询单数量、报价数量-->
    <!-- 2018-07-31 修改，之前是按照rollin_time的时间纬度来划分的，现在修改为按照erui_rfq.inquiry_check_log中事业部审核流出的时间划分 -->
    <select id="selectAreaAndCountryDetail" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        COUNT(1) AS inqCount ,
        IFNULL(SUM(IFNULL(quotation_price,0.00)),0.00) AS inqAmount ,
        SUM((CASE WHEN quoted_status ='已报价' OR quoted_status='已完成' THEN 1 ELSE 0 END)) AS quoteCount,
        SUM(IFNULL((CASE WHEN quoted_status ='已报价' OR quoted_status='已完成' THEN quotation_price  ELSE 0.00 END),0.00)) AS quoteAmount,
        inquiry_area AS area,
        inquiry_unit AS country
        FROM erui_rfq.v_inquiry_count2
        left join (
            SELECT inquiry_id as log_inquiry_id,max(created_at) as log_create_at FROM
            erui_rfq.inquiry_check_log where in_node = 'MARKET_APPROVING' group by inquiry_id
        ) as z ON erui_rfq.v_inquiry_count2.id = `z`.`log_inquiry_id`
        WHERE 1=1
        <if test="startTime!=null and endTime!=null">
            <!-- and rollin_time BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s") and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s") -->
            and `z`.`log_create_at` BETWEEN #{startTime} and #{endTime}
        </if>
        GROUP BY inquiry_area ,inquiry_unit HAVING area IS NOT NULL AND country IS NOT NULL
    </select>


    <select id="selectInqCountAndInqAmountGroupByCountry" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
          t2.`name`,
          COUNT(1) AS inqCount,
          SUM(IFNULL(t3.total_quote_price, 0)) AS inqAmount
        FROM
          `erui_rfq`.`inquiry` t1
        LEFT JOIN
          `erui_rfq`.`final_quote` t3 ON t1.id = t3.inquiry_id
            AND t3.deleted_flag = 'N'
        LEFT JOIN
          erui_rfq.inquiry_check_log t4 ON t1.id = `t4`.`inquiry_id`
            AND t4.in_node = 'MARKET_APPROVING',
              `erui_dict`.`country` t2
        WHERE
            t1.`deleted_flag` = 'N' AND t1.`status` <![CDATA[ <> ]]> 'DRAFT'
            and t1.`country_bn` = `t2`.`bn` AND `t2`.`lang` = 'zh' and quote_status in ('QUOTED','COMPLETED')
            <if test="startTime!=null and endTime!=null">
                AND `t4`.`created_at` BETWEEN #{startTime} and #{endTime}
            </if>
        GROUP BY t2.bn , t2.`name`;
    </select>

    <select id="selectQuoteCountAndQuoteAmountGroupByCountry" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
          t2.`name`,
          COUNT(1) AS quoteCount,
          SUM(IFNULL(t3.total_quote_price, 0)) AS quoteAmount
        FROM
          `erui_rfq`.`inquiry` t1
        LEFT JOIN
          `erui_rfq`.`final_quote` t3 ON t1.id = t3.inquiry_id
            AND t3.deleted_flag = 'N'
        LEFT JOIN
            erui_rfq.inquiry_check_log t4 ON t1.id = `t4`.`inquiry_id`
            AND t4.in_node = 'MARKET_APPROVING',
              `erui_dict`.`country` t2
        WHERE
            t1.`deleted_flag` = 'N' AND t1.`status` <![CDATA[ <> ]]> 'DRAFT'
            and t1.`country_bn` = `t2`.`bn` AND `t2`.`lang` = 'zh' and quote_status in ('QUOTED','COMPLETED')
            <if test="startTime!=null and endTime!=null">
                AND `t4`.`created_at` BETWEEN #{startTime} and #{endTime}
            </if>
        GROUP BY t2.bn , t2.`name`;
    </select>


    <!-- 查询事业部数据明细 ： 询单金额 、询单数量、报价数量 、报价用时-->
    <!-- 2018-07-31 修改，之前是按照rollin_time的时间纬度来划分的，现在修改为按照erui_rfq.inquiry_check_log中事业部审核流出的时间划分 -->
    <select id="selectOrgDetail" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        COUNT(1) AS inqCount ,
        IFNULL(SUM(IFNULL(quotation_price,0.00)),0.00) AS inqAmount ,
        SUM((CASE WHEN quoted_status ='已报价' OR quoted_status='已完成' THEN 1 ELSE 0 END)) AS quoteCount,
        SUM(IFNULL((CASE WHEN quoted_status ='已报价' OR quoted_status='已完成' THEN quotation_price  ELSE 0.00 END),0.00)) AS quoteAmount,
        IFNULL(AVG(IFNULL(quote_need_time,0)),0) AS quoteTime,
        organization AS org
        FROM erui_rfq.v_inquiry_count2
        left join (
            SELECT inquiry_id as log_inquiry_id,max(created_at) as log_create_at FROM
            erui_rfq.inquiry_check_log where in_node = 'MARKET_APPROVING' group by inquiry_id
        ) as z ON erui_rfq.v_inquiry_count2.id = `z`.`log_inquiry_id`
        WHERE 1=1
        <if test="startTime!=null and endTime!=null">
            <!-- and rollin_time BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s") and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s") -->
            and `z`.`log_create_at` BETWEEN #{startTime} and #{endTime}
        </if>
        GROUP BY organization HAVING org IS NOT NULL
    </select>




    <!-- 根据时间查询各分类数据数量在页面求得百分比 -->
    <select id="selectCategoryNumWhereTime" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            t1.category, COUNT(DISTINCT t1.id) AS num
        FROM
            erui_rfq.inquiry_item t1,
            erui_rfq.inquiry t2,
            erui_rfq.inquiry_check_log t3
        WHERE
            t1.inquiry_id = t2.id
                AND t1.inquiry_id = t3.inquiry_id
                AND t3.in_node = 'MARKET_APPROVING'
                AND t1.deleted_flag = 'N'
                AND t2.deleted_flag = 'N'
                AND t1.category IS NOT NULL
                AND t1.category != ''
                AND t3.created_at BETWEEN '2017-08-08' AND '2019-08-08'
                <if test="startTime!=null and endTime!=null">
                    AND t3.created_at BETWEEN #{startTime} and #{endTime}
                </if>
        GROUP BY t1.category
        ORDER BY 2 DESC


    </select>

    <!-- 查询各分类数据： 询单sku金额 、询单sku数量、报价sku数量、报价sku金额 -->
    <!-- 2018-07-31 修改，之前是按照rollin_time的时间纬度来划分的，现在修改为按照erui_rfq.inquiry_check_log中事业部审核流出的时间划分 -->
    <select id="selectDataGroupByCategory" resultType="java.util.Map" parameterType="java.util.Map">

      SELECT a.inqCount,a.inqAmount,a.category ,IFNULL(b.quoteCount,0) AS quoteCount ,IFNULL(b.quoteAmount,0.00) AS quoteAmount
      FROM
      (
        SELECT
                IFNULL(SUM(IFNULL(cate_count,0)),0) AS inqCount,
                IFNULL(SUM(IFNULL(cate_count*quote_unit_price,0.0)),0.00) AS  inqAmount,
                pro_category   AS category
        FROM
        erui_rfq.v_inquiry_sku2
        left join (
            SELECT inquiry_id as log_inquiry_id,max(created_at) as log_create_at FROM
            erui_rfq.inquiry_check_log where in_node = 'MARKET_APPROVING' group by inquiry_id
        ) as z ON erui_rfq.v_inquiry_sku2.inquiry_id = `z`.`log_inquiry_id`
        WHERE 1=1
        <if test="startTime!=null and endTime!=null">
            <!-- and rollin_time BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s") and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s") -->
            and `z`.`log_create_at` BETWEEN #{startTime} and #{endTime}
        </if>
        GROUP BY pro_category HAVING category IS NOT NULL
      ) a
      LEFT JOIN
      (
        SELECT
                IFNULL(SUM(IFNULL(cate_count,0)),0) AS quoteCount,
                IFNULL(SUM(IFNULL(cate_count*quote_unit_price,0.0)),0.00) AS  quoteAmount,
                pro_category   AS category
        FROM
        erui_rfq.v_inquiry_sku2
        left join (
            SELECT inquiry_id as log_inquiry_id,max(created_at) as log_create_at FROM
            erui_rfq.inquiry_check_log where in_node = 'MARKET_APPROVING' group by inquiry_id
        ) as z ON erui_rfq.v_inquiry_sku2.inquiry_id = `z`.`log_inquiry_id`
        WHERE 1=1
        <if test="startTime!=null and endTime!=null">
             <!-- and rollin_time BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s") and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s") -->
            and `z`.`log_create_at` BETWEEN  #{startTime} and #{endTime}
        </if>
		and quotation_num in (SELECT serial_no FROM erui_rfq.inquiry WHERE quote_status in ('QUOTED' , 'COMPLETED'))
        GROUP BY pro_category HAVING category IS NOT NULL
      ) b
      ON a.category=b.category

  </select>


    <!-- 查询各大区每天的拜访次数 -->
    <select id="selectVisitCountGrupByAreaAndVisitTime" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT COUNT(1) as visitCount , FROM_DAYS(TO_DAYS(datetime)) as visitAt ,area
        FROM
        (
        SELECT visit.buyer_id AS buyerId ,visit.created_at AS datetime, areasZh.name as area
        FROM erui_buyer.buyer_visit AS visit
        LEFT JOIN   erui_buyer.buyer  AS buyers  ON visit.buyer_id=buyers.id
        LEFT JOIN erui_operation.market_area_country AS areasBn on  buyers.country_bn=areasBn.country_bn
        LEFT JOIN erui_operation.market_area AS areasZh  ON areasBn.market_area_bn=areasZh.bn AND areasZh.lang='zh'
        ) AS a
        WHERE 1=1
        <if test="startTime!=null and endTime!=null">
            and datetime BETWEEN DATE_FORMAT(#{startTime},"%Y-%m-%d")
            and DATE_FORMAT(#{endTime},"%Y-%m-%d")
        </if>
        GROUP BY TO_DAYS(datetime),area HAVING area is not NULL AND visitAt IS  NOT  NULL ;

    </select>

    <!-- 查询各大区有多少员工-->
    <select id="selectEmployeeCountGroupByArea" resultType="java.util.Map">
        SELECT count(DISTINCT(member.employee_id))  as employeeCount ,areasCh.name as area
        FROM   erui_sys.country_member  AS member
        LEFT JOIN  erui_operation.market_area_country AS areasBn
        on  member.country_bn=areasBn.country_bn
		LEFT JOIN erui_operation.market_area    AS areasCh
        ON areasBn.market_area_bn=areasCh.bn AND areasCh.lang='zh'
        GROUP BY area  HAVING area IS NOT NULL;
    </select>

</mapper>