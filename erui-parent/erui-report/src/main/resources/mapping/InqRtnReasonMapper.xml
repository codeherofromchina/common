<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.report.dao.InqRtnReasonMapper" >
  <resultMap id="BaseResultMap" type="com.erui.report.model.InqRtnReason" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="quotation_num" property="quotationNum" jdbcType="VARCHAR" />
    <result column="rollin_time" property="rollinTime" jdbcType="TIMESTAMP" />
    <result column="inquiry_unit" property="inquiryUnit" jdbcType="VARCHAR" />
    <result column="inquiry_area" property="inquiryArea" jdbcType="VARCHAR" />
    <result column="organization" property="organization" jdbcType="VARCHAR" />
    <result column="return_season" property="returnSeason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, quotation_num, rollin_time, inquiry_unit, inquiry_area, organization, return_season
  </sql>

  <!--查询各退回原因的退回次数和询单数-->
  <select id="selectCountGroupByRtnSeason" resultType="java.util.Map" parameterType="java.util.Map" >

  select
    IFNULL(sum(case when a>0 then 1 else 0 end),0) as projectClearInqCount ,
    IFNULL(sum(a),0) AS projectClearCount,
    IFNULL(sum(case when b>0 then 1 else 0 end),0) as notOrgInqCount ,
    IFNULL(sum(b),0) AS notOrgCount,
    IFNULL(sum(case when c>0 then 1 else 0 end),0) as notSupplyInqCount ,
    IFNULL(sum(c) ,0) AS notSupplyCount,
    IFNULL(sum(case when d>0 then 1 else 0 end),0) as systemProblemsInqCount ,
    IFNULL(sum(d),0)  AS systemProblemsCount,
    IFNULL(sum(case when e>0 then 1 else 0 end),0) as otherInqCount ,
    IFNULL(sum(a),0) AS otherCount
  from (
      select
      quotation_num,
      sum(CASE WHEN return_season LIKE '%项目澄清%' then 1 else 0 end) as a,
      sum(CASE WHEN return_season LIKE '%非事业部业务范围%' then 1 else 0 end) as b,
      sum(CASE WHEN return_season LIKE '%无供应渠道%' then 1 else 0 end) as c,
      sum(CASE WHEN return_season LIKE '%系统问题%' then 1 else 0 end) as d,
      sum(CASE WHEN return_season LIKE '%其他%' OR return_season='' OR return_season IS NULL  then 1 else 0 end) as e
      from erui_rfq.v_inq_rtn_reason  WHERE 1=1
    <if test="startTime!=null and endTime!=null">
      AND  rollin_time  BETWEEN DATE_FORMAT(#{startTime},"%Y/%m/%d %H:%i:%s")
      and DATE_FORMAT(#{endTime},"%Y/%m/%d %H:%i:%s")
    </if>
    <if test="area!=null and area!=''">
      AND  inquiry_area = #{area}
    </if>
    <if test="org!=null and org!=''">
      AND  organization = #{org}
    </if>
       group by quotation_num

      ) as t;
  </select>
  <select id="selectCountGroupByRtnSeasonAndArea" resultType="java.util.Map" parameterType="com.erui.report.model.InqRtnReasonExample" >
    select
    COUNT(1) AS total,
    (case WHEN inquiry_area IS NULL THEN '其他' ELSE inquiry_area END)  AS area,
    return_season  AS reason
    from erui_rfq.v_inq_rtn_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    GROUP BY inquiry_area ,return_season
  </select>
  <select id="selectCountGroupByRtnSeasonAndOrg" resultType="java.util.Map" parameterType="com.erui.report.model.InqRtnReasonExample" >
    select
    COUNT(1) AS total,
    (case WHEN organization IS NULL THEN '其他事业部' ELSE organization END)  AS org,
    return_season  AS reason
    from erui_rfq.v_inq_rtn_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
      GROUP BY organization ,return_season
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.report.model.InqRtnReasonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inq_rtn_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from inq_rtn_reason
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from inq_rtn_reason
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.report.model.InqRtnReasonExample" >
    delete from inq_rtn_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertRtnReasons" parameterType="java.util.List" >
    insert into inq_rtn_reason (quotation_num, rollin_time, 
      inquiry_unit, inquiry_area, organization, 
      return_season)
    values
    <foreach collection="list" item="reason" index="index" separator=",">
      (#{reason.quotationNum,jdbcType=VARCHAR},  #{reason.rollinTime,jdbcType=TIMESTAMP},
      #{reason.inquiryUnit,jdbcType=VARCHAR}, #{reason.inquiryArea,jdbcType=VARCHAR}, #{reason.organization,jdbcType=VARCHAR},
      #{reason.returnSeason,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insert" parameterType="com.erui.report.model.InqRtnReason" >
    insert into inq_rtn_reason (id, quotation_num, rollin_time,
      inquiry_unit, inquiry_area, organization,
      return_season)
    values (#{id,jdbcType=BIGINT}, #{quotationNum,jdbcType=VARCHAR}, #{rollinTime,jdbcType=TIMESTAMP},
      #{inquiryUnit,jdbcType=VARCHAR}, #{inquiryArea,jdbcType=VARCHAR}, #{organization,jdbcType=VARCHAR},
      #{returnSeason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.report.model.InqRtnReason" >
    insert into inq_rtn_reason
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="quotationNum != null" >
        quotation_num,
      </if>
      <if test="rollinTime != null" >
        rollin_time,
      </if>
      <if test="inquiryUnit != null" >
        inquiry_unit,
      </if>
      <if test="inquiryArea != null" >
        inquiry_area,
      </if>
      <if test="organization != null" >
        organization,
      </if>
      <if test="returnSeason != null" >
        return_season,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="quotationNum != null" >
        #{quotationNum,jdbcType=VARCHAR},
      </if>
      <if test="rollinTime != null" >
        #{rollinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inquiryUnit != null" >
        #{inquiryUnit,jdbcType=VARCHAR},
      </if>
      <if test="inquiryArea != null" >
        #{inquiryArea,jdbcType=VARCHAR},
      </if>
      <if test="organization != null" >
        #{organization,jdbcType=VARCHAR},
      </if>
      <if test="returnSeason != null" >
        #{returnSeason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.report.model.InqRtnReasonExample" resultType="java.lang.Integer" >
    select count(*) from inq_rtn_reason
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update inq_rtn_reason
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.quotationNum != null" >
        quotation_num = #{record.quotationNum,jdbcType=VARCHAR},
      </if>
      <if test="record.rollinTime != null" >
        rollin_time = #{record.rollinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inquiryUnit != null" >
        inquiry_unit = #{record.inquiryUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.inquiryArea != null" >
        inquiry_area = #{record.inquiryArea,jdbcType=VARCHAR},
      </if>
      <if test="record.organization != null" >
        organization = #{record.organization,jdbcType=VARCHAR},
      </if>
      <if test="record.returnSeason != null" >
        return_season = #{record.returnSeason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update inq_rtn_reason
    set id = #{record.id,jdbcType=BIGINT},
      quotation_num = #{record.quotationNum,jdbcType=VARCHAR},
      rollin_time = #{record.rollinTime,jdbcType=TIMESTAMP},
      inquiry_unit = #{record.inquiryUnit,jdbcType=VARCHAR},
      inquiry_area = #{record.inquiryArea,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=VARCHAR},
      return_season = #{record.returnSeason,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.report.model.InqRtnReason" >
    update inq_rtn_reason
    <set >
      <if test="quotationNum != null" >
        quotation_num = #{quotationNum,jdbcType=VARCHAR},
      </if>
      <if test="rollinTime != null" >
        rollin_time = #{rollinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inquiryUnit != null" >
        inquiry_unit = #{inquiryUnit,jdbcType=VARCHAR},
      </if>
      <if test="inquiryArea != null" >
        inquiry_area = #{inquiryArea,jdbcType=VARCHAR},
      </if>
      <if test="organization != null" >
        organization = #{organization,jdbcType=VARCHAR},
      </if>
      <if test="returnSeason != null" >
        return_season = #{returnSeason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.report.model.InqRtnReason" >
    update inq_rtn_reason
    set quotation_num = #{quotationNum,jdbcType=VARCHAR},
      rollin_time = #{rollinTime,jdbcType=TIMESTAMP},
      inquiry_unit = #{inquiryUnit,jdbcType=VARCHAR},
      inquiry_area = #{inquiryArea,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      return_season = #{returnSeason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>