<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erui.report.dao.SupplyChainMapper" >
  <resultMap id="BaseResultMap" type="com.erui.report.model.SupplyChain" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="organization" property="organization" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="item_class" property="itemClass" jdbcType="VARCHAR" />
    <result column="plan_sku_num" property="planSkuNum" jdbcType="INTEGER" />
    <result column="finish_sku_num" property="finishSkuNum" jdbcType="INTEGER" />
    <result column="plan_spu_num" property="planSpuNum" jdbcType="INTEGER" />
    <result column="finish_spu_num" property="finishSpuNum" jdbcType="INTEGER" />
    <result column="plan_suppli_num" property="planSuppliNum" jdbcType="INTEGER" />
    <result column="finish_suppli_num" property="finishSuppliNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_at, organization, category, item_class, plan_sku_num, finish_sku_num, 
    plan_spu_num, finish_spu_num, plan_suppli_num, finish_suppli_num
  </sql>
  <select id="selectFinishByDate" resultType="java.util.Map" parameterType="com.erui.report.model.SupplyChainExample">
    SELECT finish_spu_num,finish_sku_num ,finish_suppli_num ,create_at
    FROM supply_chain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erui.report.model.SupplyChainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supply_chain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
<!--品类部列表-->
  <select id="selectCategoryList" resultType="java.lang.String" >
SELECT DISTINCT(category) FROM supply_chain
  </select>

  <select id="selectCateSuppliyChain" resultType="com.erui.report.model.SuppliyChainCateVo"  >
   SELECT
	SUM(plan_sku_num) AS planSKU,
	SUM(finish_sku_num) AS finishSKU,
	SUM(plan_spu_num) AS planSPU,
	SUM(finish_spu_num) AS finishSPU,
	SUM(plan_suppli_num) AS planSuppliy,
	SUM(finish_suppli_num) AS finishSuppliy,
	category AS category
    FROM
	supply_chain
    GROUP BY
	category
  </select>
  <select id="selectItemCalssSuppliyChainByExample" resultType="com.erui.report.model.SuppliyChainItemClassVo"  parameterType="com.erui.report.model.SupplyChainExample" >
    SELECT
    SUM(plan_sku_num) AS planSKU,
    SUM(finish_sku_num) AS finishSKU,
    SUM(plan_spu_num) AS planSPU,
    SUM(finish_spu_num) AS finishSPU,
    SUM(plan_suppli_num) AS planSuppliy,
    SUM(finish_suppli_num) AS finishSuppliy,
    item_class AS itemClass
    FROM
    supply_chain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    GROUP BY
    itemClass
  </select>

  <select id="selectSuppliyChainByItemClassByExample" resultType="com.erui.report.model.SuppliyChainItemClassVo"  parameterType="com.erui.report.model.SupplyChainExample" >
    SELECT
    SUM(plan_sku_num) AS planSKU,
    SUM(finish_sku_num) AS finishSKU,
    SUM(plan_spu_num) AS planSPU,
    SUM(finish_spu_num) AS finishSPU,
    SUM(plan_suppli_num) AS planSuppliy,
    SUM(finish_suppli_num) AS finishSuppliy,
    item_class AS itemClass
    FROM
    supply_chain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectOrgSuppliyChain" resultType="com.erui.report.model.SuppliyChainOrgVo"  >
    SELECT
    SUM(plan_sku_num) AS planSKU,
    SUM(finish_sku_num) AS finishSKU,
    SUM(plan_spu_num) AS planSPU,
    SUM(finish_spu_num) AS finishSPU,
    SUM(plan_suppli_num) AS planSuppliy,
    SUM(finish_suppli_num) AS finishSuppliy,
    organization AS org
    FROM
    supply_chain
    GROUP BY
    org
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supply_chain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supply_chain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erui.report.model.SupplyChainExample" >
    delete from supply_chain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erui.report.model.SupplyChain" >
    insert into supply_chain (id, create_at, organization, 
      category, item_class, plan_sku_num, 
      finish_sku_num, plan_spu_num, finish_spu_num, 
      plan_suppli_num, finish_suppli_num)
    values (#{id,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{organization,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{itemClass,jdbcType=VARCHAR}, #{planSkuNum,jdbcType=INTEGER}, 
      #{finishSkuNum,jdbcType=INTEGER}, #{planSpuNum,jdbcType=INTEGER}, #{finishSpuNum,jdbcType=INTEGER}, 
      #{planSuppliNum,jdbcType=INTEGER}, #{finishSuppliNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.erui.report.model.SupplyChain" >
    insert into supply_chain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="organization != null" >
        organization,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="itemClass != null" >
        item_class,
      </if>
      <if test="planSkuNum != null" >
        plan_sku_num,
      </if>
      <if test="finishSkuNum != null" >
        finish_sku_num,
      </if>
      <if test="planSpuNum != null" >
        plan_spu_num,
      </if>
      <if test="finishSpuNum != null" >
        finish_spu_num,
      </if>
      <if test="planSuppliNum != null" >
        plan_suppli_num,
      </if>
      <if test="finishSuppliNum != null" >
        finish_suppli_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="organization != null" >
        #{organization,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="itemClass != null" >
        #{itemClass,jdbcType=VARCHAR},
      </if>
      <if test="planSkuNum != null" >
        #{planSkuNum,jdbcType=INTEGER},
      </if>
      <if test="finishSkuNum != null" >
        #{finishSkuNum,jdbcType=INTEGER},
      </if>
      <if test="planSpuNum != null" >
        #{planSpuNum,jdbcType=INTEGER},
      </if>
      <if test="finishSpuNum != null" >
        #{finishSpuNum,jdbcType=INTEGER},
      </if>
      <if test="planSuppliNum != null" >
        #{planSuppliNum,jdbcType=INTEGER},
      </if>
      <if test="finishSuppliNum != null" >
        #{finishSuppliNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erui.report.model.SupplyChainExample" resultType="java.lang.Integer" >
    select count(*) from supply_chain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update supply_chain
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.organization != null" >
        organization = #{record.organization,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.itemClass != null" >
        item_class = #{record.itemClass,jdbcType=VARCHAR},
      </if>
      <if test="record.planSkuNum != null" >
        plan_sku_num = #{record.planSkuNum,jdbcType=INTEGER},
      </if>
      <if test="record.finishSkuNum != null" >
        finish_sku_num = #{record.finishSkuNum,jdbcType=INTEGER},
      </if>
      <if test="record.planSpuNum != null" >
        plan_spu_num = #{record.planSpuNum,jdbcType=INTEGER},
      </if>
      <if test="record.finishSpuNum != null" >
        finish_spu_num = #{record.finishSpuNum,jdbcType=INTEGER},
      </if>
      <if test="record.planSuppliNum != null" >
        plan_suppli_num = #{record.planSuppliNum,jdbcType=INTEGER},
      </if>
      <if test="record.finishSuppliNum != null" >
        finish_suppli_num = #{record.finishSuppliNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update supply_chain
    set id = #{record.id,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      organization = #{record.organization,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      item_class = #{record.itemClass,jdbcType=VARCHAR},
      plan_sku_num = #{record.planSkuNum,jdbcType=INTEGER},
      finish_sku_num = #{record.finishSkuNum,jdbcType=INTEGER},
      plan_spu_num = #{record.planSpuNum,jdbcType=INTEGER},
      finish_spu_num = #{record.finishSpuNum,jdbcType=INTEGER},
      plan_suppli_num = #{record.planSuppliNum,jdbcType=INTEGER},
      finish_suppli_num = #{record.finishSuppliNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erui.report.model.SupplyChain" >
    update supply_chain
    <set >
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="organization != null" >
        organization = #{organization,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="itemClass != null" >
        item_class = #{itemClass,jdbcType=VARCHAR},
      </if>
      <if test="planSkuNum != null" >
        plan_sku_num = #{planSkuNum,jdbcType=INTEGER},
      </if>
      <if test="finishSkuNum != null" >
        finish_sku_num = #{finishSkuNum,jdbcType=INTEGER},
      </if>
      <if test="planSpuNum != null" >
        plan_spu_num = #{planSpuNum,jdbcType=INTEGER},
      </if>
      <if test="finishSpuNum != null" >
        finish_spu_num = #{finishSpuNum,jdbcType=INTEGER},
      </if>
      <if test="planSuppliNum != null" >
        plan_suppli_num = #{planSuppliNum,jdbcType=INTEGER},
      </if>
      <if test="finishSuppliNum != null" >
        finish_suppli_num = #{finishSuppliNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erui.report.model.SupplyChain" >
    update supply_chain
    set create_at = #{createAt,jdbcType=TIMESTAMP},
      organization = #{organization,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      item_class = #{itemClass,jdbcType=VARCHAR},
      plan_sku_num = #{planSkuNum,jdbcType=INTEGER},
      finish_sku_num = #{finishSkuNum,jdbcType=INTEGER},
      plan_spu_num = #{planSpuNum,jdbcType=INTEGER},
      finish_spu_num = #{finishSpuNum,jdbcType=INTEGER},
      plan_suppli_num = #{planSuppliNum,jdbcType=INTEGER},
      finish_suppli_num = #{finishSuppliNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>